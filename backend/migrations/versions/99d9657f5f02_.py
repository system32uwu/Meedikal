"""empty message

Revision ID: 99d9657f5f02
Revises: 
Create Date: 2021-08-29 02:54:45.917474

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '99d9657f5f02'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('state', sa.Enum('OK', 'CANCELLED', 'RESCHEDULING', name='appointmentState'), nullable=False),
    sa.Column('timeBegins', sa.Time(), nullable=True),
    sa.Column('timeEnds', sa.Time(), nullable=True),
    sa.Column('etpp', sa.Integer(), nullable=True),
    sa.Column('maxTurns', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('phoneNumber', sa.VARCHAR(length=64), nullable=False),
    sa.Column('location', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('clinicalSign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('description', sa.VARCHAR(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('disease',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('description', sa.VARCHAR(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('exam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('preview', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('form',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=64), nullable=True),
    sa.Column('preview', sa.String(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('laboratory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('phoneNumber', sa.VARCHAR(length=64), nullable=False),
    sa.Column('location', sa.VARCHAR(length=64), nullable=False),
    sa.Column('email', sa.VARCHAR(length=256), nullable=False),
    sa.Column('logo', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('manufacturer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('location', sa.VARCHAR(length=256), nullable=True),
    sa.Column('email', sa.VARCHAR(length=256), nullable=True),
    sa.Column('phoneNumber', sa.VARCHAR(length=32), nullable=True),
    sa.Column('logo', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('medicine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=64), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parameter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('measureUnit', sa.String(), nullable=True),
    sa.Column('refMinValue', sa.Float(), nullable=True),
    sa.Column('refMaxValue', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('state',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surgery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('symptom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('description', sa.VARCHAR(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('treatment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('preview', sa.String(), nullable=True),
    sa.Column('indications', sa.JSON(), nullable=True),
    sa.Column('avgSessionTime', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.Column('name1', sa.VARCHAR(length=32), nullable=False),
    sa.Column('name2', sa.VARCHAR(length=32), nullable=True),
    sa.Column('surname1', sa.VARCHAR(length=32), nullable=False),
    sa.Column('surname2', sa.VARCHAR(length=32), nullable=True),
    sa.Column('sex', sa.CHAR(length=1), nullable=False),
    sa.Column('genre', sa.VARCHAR(length=32), nullable=True),
    sa.Column('birthdate', sa.DateTime(), nullable=False),
    sa.Column('location', sa.VARCHAR(length=256), nullable=True),
    sa.Column('email', sa.VARCHAR(length=256), nullable=True),
    sa.Column('active', sa.BOOLEAN(), nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), nullable=False),
    sa.PrimaryKeyConstraint('ci')
    )
    op.create_table('vaccine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('validity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('administrative',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ci'], ['user.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ci')
    )
    op.create_table('apTakesPlace',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('idBranch', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idAp'], ['appointment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idBranch'], ['branch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp')
    )
    op.create_table('diseaseCat',
    sa.Column('idDisease', sa.Integer(), nullable=False),
    sa.Column('idCat', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idCat'], ['category.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idDisease'], ['disease.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idDisease', 'idCat')
    )
    op.create_table('exHasInd',
    sa.Column('idEx', sa.Integer(), nullable=False),
    sa.Column('idInd', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idEx'], ['exam.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idInd'], ['indication.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idEx', 'idInd')
    )
    op.create_table('exHasPar',
    sa.Column('idEx', sa.Integer(), nullable=False),
    sa.Column('idPar', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idEx'], ['exam.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idPar'], ['parameter.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idEx', 'idPar')
    )
    op.create_table('from',
    sa.Column('idQ', sa.Integer(), nullable=False),
    sa.Column('idF', sa.Integer(), nullable=False),
    sa.Column('questionField', sa.String(length=255), nullable=True),
    sa.Column('responseField', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['idF'], ['form.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idQ'], ['question.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idQ', 'idF')
    )
    op.create_table('manufacturedBy',
    sa.Column('idMed', sa.Integer(), nullable=False),
    sa.Column('idManufacturer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idManufacturer'], ['manufacturer.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idMed'], ['medicine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idMed', 'idManufacturer')
    )
    op.create_table('medicalPersonnel',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ci'], ['user.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ci')
    )
    op.create_table('patient',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ci'], ['user.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ci')
    )
    op.create_table('uHasAlert',
    sa.Column('idAlert', sa.Integer(), nullable=False),
    sa.Column('ciUser', sa.Integer(), nullable=True),
    sa.Column('detail', sa.VARCHAR(length=256), nullable=False),
    sa.ForeignKeyConstraint(['ciUser'], ['user.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idAlert'], ['alert.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAlert')
    )
    op.create_table('uIsRelatedTo',
    sa.Column('_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user1', sa.Integer(), nullable=False),
    sa.Column('user2', sa.Integer(), nullable=False),
    sa.Column('relationType', sa.VARCHAR(length=32), nullable=True),
    sa.ForeignKeyConstraint(['user1'], ['user.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user2'], ['user.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('_id', 'user1', 'user2')
    )
    op.create_table('uReceivesNot',
    sa.Column('idNot', sa.Integer(), nullable=False),
    sa.Column('ciUser', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ciUser'], ['user.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idNot'], ['notification.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idNot')
    )
    op.create_table('uSufferedFrom',
    sa.Column('ciUser', sa.Integer(), nullable=False),
    sa.Column('idDisease', sa.Integer(), nullable=False),
    sa.Column('fromDate', sa.DateTime(), nullable=False),
    sa.Column('toDate', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.VARCHAR(length=128), nullable=True),
    sa.ForeignKeyConstraint(['ciUser'], ['user.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idDisease'], ['disease.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ciUser', 'idDisease', 'fromDate')
    )
    op.create_table('uTakesVaccine',
    sa.Column('idVaccine', sa.Integer(), nullable=False),
    sa.Column('ciUser', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ciUser'], ['user.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idVaccine'], ['vaccine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idVaccine', 'ciUser', 'date')
    )
    op.create_table('userPhone',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=32), nullable=False),
    sa.ForeignKeyConstraint(['ci'], ['user.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ci', 'phone')
    )
    op.create_table('designed',
    sa.Column('ciMp', sa.Integer(), nullable=False),
    sa.Column('idF', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('isMainAuthor', sa.BOOLEAN(), nullable=False),
    sa.Column('changelog', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ciMp'], ['medicalPersonnel.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idF'], ['form.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ciMp', 'idF', 'date')
    )
    op.create_table('doctor',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ci'], ['medicalPersonnel.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ci')
    )
    op.create_table('follows',
    sa.Column('idFollows', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idTreatment', sa.Integer(), nullable=False),
    sa.Column('beginDate', sa.DateTime(), nullable=True),
    sa.Column('endDate', sa.DateTime(), nullable=True),
    sa.Column('schedule', sa.JSON(), nullable=True),
    sa.Column('result', sa.VARCHAR(length=64), nullable=True),
    sa.ForeignKeyConstraint(['ciPa'], ['patient.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idTreatment'], ['treatment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idFollows', 'ciPa', 'idTreatment')
    )
    op.create_table('medicalAssistant',
    sa.Column('ci', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ci'], ['medicalPersonnel.ci'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ci')
    )
    op.create_table('mpHasSpec',
    sa.Column('ciMp', sa.Integer(), nullable=False),
    sa.Column('idSpec', sa.Integer(), nullable=False),
    sa.Column('detail', sa.VARCHAR(length=128), nullable=True),
    sa.ForeignKeyConstraint(['ciMp'], ['medicalPersonnel.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idSpec'], ['specialty.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ciMp', 'idSpec')
    )
    op.create_table('registersSt',
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idState', sa.Integer(), nullable=False),
    sa.Column('fromDate', sa.DateTime(), nullable=False),
    sa.Column('toDate', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.VARCHAR(length=256), nullable=True),
    sa.ForeignKeyConstraint(['ciPa'], ['patient.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idState'], ['state.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ciPa', 'idState', 'fromDate')
    )
    op.create_table('takesEx',
    sa.Column('idExTaken', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('idEx', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['ciPa'], ['patient.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idEx'], ['exam.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idExTaken', 'idEx', 'ciPa')
    )
    op.create_table('takesMed',
    sa.Column('idMed', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('detail', sa.VARCHAR(length=256), nullable=True),
    sa.ForeignKeyConstraint(['ciPa'], ['patient.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idMed'], ['medicine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idMed', 'ciPa')
    )
    op.create_table('takesSurg',
    sa.Column('idTakenSurg', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('idSurg', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('startedAt', sa.DateTime(), nullable=True),
    sa.Column('finishedAt', sa.DateTime(), nullable=True),
    sa.Column('result', sa.VARCHAR(length=128), nullable=True),
    sa.ForeignKeyConstraint(['ciPa'], ['patient.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idSurg'], ['surgery.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idTakenSurg', 'idSurg', 'ciPa')
    )
    op.create_table('assignedTo',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciDoc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ciDoc'], ['doctor.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idAp'], ['appointment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp')
    )
    op.create_table('assistsSurg',
    sa.Column('idTakenSurg', sa.Integer(), nullable=False),
    sa.Column('idSurg', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('ciMa', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ciMa'], ['medicalAssistant.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idTakenSurg', 'idSurg', 'ciPa'], ['takesSurg.idTakenSurg', 'takesSurg.idSurg', 'takesSurg.ciPa'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idTakenSurg', 'idSurg', 'ciPa', 'ciMa')
    )
    op.create_table('handlesEx',
    sa.Column('idEx', sa.Integer(), nullable=False),
    sa.Column('idExTaken', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idLab', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idEx', 'idExTaken', 'ciPa'], ['takesEx.idEx', 'takesEx.idExTaken', 'takesEx.ciPa'], ),
    sa.ForeignKeyConstraint(['idLab'], ['laboratory.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idEx', 'idExTaken', 'ciPa')
    )
    op.create_table('handlesSurg',
    sa.Column('idTakenSurg', sa.Integer(), nullable=False),
    sa.Column('idSurg', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('ciDoc', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ciDoc'], ['doctor.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idTakenSurg', 'idSurg', 'ciPa'], ['takesSurg.idTakenSurg', 'takesSurg.idSurg', 'takesSurg.ciPa'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idTakenSurg', 'idSurg', 'ciPa', 'ciDoc')
    )
    op.create_table('prescribes',
    sa.Column('idMed', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('ciDoc', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ciDoc'], ['doctor.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idMed', 'ciPa'], ['takesMed.idMed', 'takesMed.ciPa'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idMed', 'ciPa', 'ciDoc', 'date')
    )
    op.create_table('takesCare',
    sa.Column('idFollows', sa.Integer(), nullable=False),
    sa.Column('idTreatment', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('ciMp', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ciMp'], ['medicalPersonnel.ci'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idFollows', 'idTreatment', 'ciPa'], ['follows.idFollows', 'follows.idTreatment', 'follows.ciPa'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idFollows', 'idTreatment', 'ciPa', 'ciMp', 'date')
    )
    op.create_table('assistsAp',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciMa', sa.Integer(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['ciMa'], ['medicalAssistant.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idAp'], ['assignedTo.idAp'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciMa', 'time')
    )
    op.create_table('attendsTo',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('motive', sa.VARCHAR(length=256), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['ciPa'], ['patient.ci'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idAp'], ['assignedTo.idAp'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPa')
    )
    op.create_table('trTakesPlace',
    sa.Column('idFollows', sa.Integer(), nullable=False),
    sa.Column('idTreatment', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('ciMp', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('idBranch', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idBranch'], ['branch.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idFollows', 'idTreatment', 'ciPa', 'ciMp', 'date'], ['takesCare.idFollows', 'takesCare.idTreatment', 'takesCare.ciPa', 'takesCare.ciMp', 'takesCare.date'], ),
    sa.PrimaryKeyConstraint('idFollows', 'idTreatment', 'ciPa', 'ciMp', 'date')
    )
    op.create_table('apRefExam',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPaAp', sa.Integer(), nullable=False),
    sa.Column('idExTaken', sa.Integer(), nullable=False),
    sa.Column('idEx', sa.Integer(), nullable=False),
    sa.Column('ciPaEx', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idAp', 'ciPaAp'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idExTaken', 'idEx', 'ciPaEx'], ['takesEx.idExTaken', 'takesEx.idEx', 'takesEx.ciPa'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPaAp', 'idExTaken', 'idEx', 'ciPaEx')
    )
    op.create_table('apRefPrevAp',
    sa.Column('idCurrAp', sa.Integer(), nullable=False),
    sa.Column('ciPaCurrAp', sa.Integer(), nullable=False),
    sa.Column('idPrevAp', sa.Integer(), nullable=False),
    sa.Column('ciPaPrevAp', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idCurrAp', 'ciPaCurrAp'], ['attendsTo.idAp', 'attendsTo.ciPa'], name='fk_currAp', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idPrevAp', 'ciPaPrevAp'], ['attendsTo.idAp', 'attendsTo.ciPa'], name='fk_prevAp', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idCurrAp', 'ciPaCurrAp', 'idPrevAp', 'ciPaPrevAp')
    )
    op.create_table('apRefTr',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPaAp', sa.Integer(), nullable=False),
    sa.Column('idFollows', sa.Integer(), nullable=False),
    sa.Column('idTreatment', sa.Integer(), nullable=False),
    sa.Column('ciPaTr', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idAp', 'ciPaAp'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idFollows', 'idTreatment', 'ciPaTr'], ['follows.idFollows', 'follows.idTreatment', 'follows.ciPa'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPaAp', 'idFollows', 'idTreatment', 'ciPaTr')
    )
    op.create_table('diagnoses',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idDis', sa.Integer(), nullable=False),
    sa.Column('detail', sa.VARCHAR(length=256), nullable=True),
    sa.ForeignKeyConstraint(['idAp', 'ciPa'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idDis'], ['disease.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPa', 'idDis')
    )
    op.create_table('fills',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idQuestion', sa.Integer(), nullable=False),
    sa.Column('idForm', sa.Integer(), nullable=False),
    sa.Column('response', sa.VARCHAR(length=256), nullable=True),
    sa.ForeignKeyConstraint(['idAp', 'ciPa'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idQuestion', 'idForm'], ['from.idQ', 'from.idF'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPa', 'idQuestion', 'idForm')
    )
    op.create_table('registersCs',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idCs', sa.Integer(), nullable=False),
    sa.Column('detail', sa.VARCHAR(length=256), nullable=True),
    sa.ForeignKeyConstraint(['idAp', 'ciPa'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idCs'], ['clinicalSign.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPa', 'idCs')
    )
    op.create_table('registersSy',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPa', sa.Integer(), nullable=False),
    sa.Column('idSy', sa.Integer(), nullable=False),
    sa.Column('detail', sa.VARCHAR(length=256), nullable=True),
    sa.ForeignKeyConstraint(['idAp', 'ciPa'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idSy'], ['symptom.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPa', 'idSy')
    )
    op.create_table('requiresEx',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPaAp', sa.Integer(), nullable=False),
    sa.Column('idEx', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idAp', 'ciPaAp'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idEx'], ['exam.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPaAp', 'idEx')
    )
    op.create_table('suggestsTr',
    sa.Column('idAp', sa.Integer(), nullable=False),
    sa.Column('ciPaAp', sa.Integer(), nullable=False),
    sa.Column('idTreatment', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['idAp', 'ciPaAp'], ['attendsTo.idAp', 'attendsTo.ciPa'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idTreatment'], ['treatment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idAp', 'ciPaAp', 'idTreatment')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('suggestsTr')
    op.drop_table('requiresEx')
    op.drop_table('registersSy')
    op.drop_table('registersCs')
    op.drop_table('fills')
    op.drop_table('diagnoses')
    op.drop_table('apRefTr')
    op.drop_table('apRefPrevAp')
    op.drop_table('apRefExam')
    op.drop_table('trTakesPlace')
    op.drop_table('attendsTo')
    op.drop_table('assistsAp')
    op.drop_table('takesCare')
    op.drop_table('prescribes')
    op.drop_table('handlesSurg')
    op.drop_table('handlesEx')
    op.drop_table('assistsSurg')
    op.drop_table('assignedTo')
    op.drop_table('takesSurg')
    op.drop_table('takesMed')
    op.drop_table('takesEx')
    op.drop_table('registersSt')
    op.drop_table('mpHasSpec')
    op.drop_table('medicalAssistant')
    op.drop_table('follows')
    op.drop_table('doctor')
    op.drop_table('designed')
    op.drop_table('userPhone')
    op.drop_table('uTakesVaccine')
    op.drop_table('uSufferedFrom')
    op.drop_table('uReceivesNot')
    op.drop_table('uIsRelatedTo')
    op.drop_table('uHasAlert')
    op.drop_table('patient')
    op.drop_table('medicalPersonnel')
    op.drop_table('manufacturedBy')
    op.drop_table('from')
    op.drop_table('exHasPar')
    op.drop_table('exHasInd')
    op.drop_table('diseaseCat')
    op.drop_table('apTakesPlace')
    op.drop_table('administrative')
    op.drop_table('vaccine')
    op.drop_table('user')
    op.drop_table('treatment')
    op.drop_table('symptom')
    op.drop_table('surgery')
    op.drop_table('state')
    op.drop_table('specialty')
    op.drop_table('question')
    op.drop_table('parameter')
    op.drop_table('notification')
    op.drop_table('medicine')
    op.drop_table('manufacturer')
    op.drop_table('laboratory')
    op.drop_table('indication')
    op.drop_table('form')
    op.drop_table('exam')
    op.drop_table('disease')
    op.drop_table('clinicalSign')
    op.drop_table('category')
    op.drop_table('branch')
    op.drop_table('appointment')
    op.drop_table('alert')
    # ### end Alembic commands ###
